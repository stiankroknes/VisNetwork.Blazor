{
  "api/index.html": {
    "href": "api/index.html",
    "title": "VisNetwork.Blazor API Reference | VisNetwork.Blazor",
    "keywords": "VisNetwork.Blazor API Reference Select an API from the menu on the left."
  },
  "api/VisNetwork.Blazor.html": {
    "href": "api/VisNetwork.Blazor.html",
    "title": "Namespace VisNetwork.Blazor | VisNetwork.Blazor",
    "keywords": "Namespace VisNetwork.Blazor Classes Network VisNetworkConfiguration Interfaces IVersionProvider"
  },
  "api/VisNetwork.Blazor.IVersionProvider.html": {
    "href": "api/VisNetwork.Blazor.IVersionProvider.html",
    "title": "Interface IVersionProvider | VisNetwork.Blazor",
    "keywords": "Interface IVersionProvider Namespace : VisNetwork.Blazor Assembly : VisNetwork.Blazor.dll Syntax public interface IVersionProvider Properties | Improve this Doc View Source Version Declaration string Version { get; } Property Value Type Description System.String"
  },
  "api/VisNetwork.Blazor.Models.Arrows.html": {
    "href": "api/VisNetwork.Blazor.Models.Arrows.html",
    "title": "Class Arrows | VisNetwork.Blazor",
    "keywords": "Class Arrows Options for arrows for edge. Inheritance System.Object Arrows Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class Arrows : object Properties | Improve this Doc View Source From Exactly the same as the to object but with an arrowhead at the from node of the edge. Declaration public ArrowsOptions From { get; set; } Property Value Type Description ArrowsOptions | Improve this Doc View Source Middle Similar to the 'to' object, but with an arrowhead in the center of the edge. The direction of the arrow can be flipped by using a negative value for arrows.middle.scaleFactor. Declaration public ArrowsOptions Middle { get; set; } Property Value Type Description ArrowsOptions | Improve this Doc View Source To Options for the 'to' side of the edge. Declaration public ArrowsOptions To { get; set; } Property Value Type Description ArrowsOptions"
  },
  "api/VisNetwork.Blazor.Models.ArrowsOptions.html": {
    "href": "api/VisNetwork.Blazor.Models.ArrowsOptions.html",
    "title": "Class ArrowsOptions | VisNetwork.Blazor",
    "keywords": "Class ArrowsOptions Options for arrow. Inheritance System.Object ArrowsOptions Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class ArrowsOptions : object Properties | Improve this Doc View Source Enabled Toggle the arrow on or off. This option is optional, if undefined and the scaleFactor property is set, enabled will be set to true. The default is false. Declaration public bool? Enabled { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source ImageHeight The height of the image arrow. The height of the image file is used if this isn't defined. Declaration public int? ImageHeight { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source ImageWidth The width of the image arrow. The width of the image file is used if this isn't defined. Declaration public int? ImageWidth { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source ScaleFactor The scale factor allows you to change the size of the arrowhead. The default is 1. Declaration public int? ScaleFactor { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Src The URL for the image arrow type. Declaration public string? Src { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Type The type of endpoint. Possible values are: arrow, bar, circle and image. The default is arrow Declaration public string? Type { get; set; } Property Value Type Description System.Nullable < System.String >"
  },
  "api/VisNetwork.Blazor.Models.BarnesHutOption.html": {
    "href": "api/VisNetwork.Blazor.Models.BarnesHutOption.html",
    "title": "Class BarnesHutOption | VisNetwork.Blazor",
    "keywords": "Class BarnesHutOption Inheritance System.Object BarnesHutOption Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class BarnesHutOption : object Properties | Improve this Doc View Source AvoidOverlap Accepted range: [0 .. 1]. When larger than 0, the size of the node is taken into account. The distance will be calculated from the radius of the encompassing circle of the node for both the gravity model. Value 1 is maximum overlap avoidance. The default is 0. Declaration public double? AvoidOverlap { get; set; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source CentralGravity There is a central gravity attractor to pull the entire network back to the center. The default is 0.3. Declaration public decimal? CentralGravity { get; set; } Property Value Type Description System.Nullable < System.Decimal > | Improve this Doc View Source Damping Accepted range: [0 .. 1]. The damping factor is how much of the velocity from the previous physics simulation iteration carries over to the next iteration. The default is 0.09. Declaration public decimal? Damping { get; set; } Property Value Type Description System.Nullable < System.Decimal > | Improve this Doc View Source GravitationalConstant Gravity attracts. We like repulsion. So the value is negative. If you want the repulsion to be stronger, decrease the value (so -10000, -50000). The default is -2000. Declaration public int? GravitationalConstant { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source SpringConstant This is how 'sturdy' the springs are. Higher values mean stronger springs. The default is 0.04. Declaration public decimal? SpringConstant { get; set; } Property Value Type Description System.Nullable < System.Decimal > | Improve this Doc View Source SpringLength The edges are modelled as springs. This springLength here is the rest length of the spring. The default is 95. Declaration public int? SpringLength { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Theta This parameter determines the boundary between consolidated long range forces and individual short range forces. To oversimplify higher values are faster but generate more errors, lower values are slower but with less errors. The default is 0.5. Declaration public decimal? Theta { get; set; } Property Value Type Description System.Nullable < System.Decimal >"
  },
  "api/VisNetwork.Blazor.Models.BaseClickEvent.html": {
    "href": "api/VisNetwork.Blazor.Models.BaseClickEvent.html",
    "title": "Class BaseClickEvent | VisNetwork.Blazor",
    "keywords": "Class BaseClickEvent Inheritance System.Object BaseClickEvent ClickEvent DeselectClickEvent Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class BaseClickEvent : object Properties | Improve this Doc View Source Edges Selected edge ids Declaration public List<string> Edges { get; set; } Property Value Type Description List < System.String > | Improve this Doc View Source Event Declaration public object Event { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Nodes Selected node ids Declaration public List<string> Nodes { get; set; } Property Value Type Description List < System.String > | Improve this Doc View Source Pointer Declaration public object Pointer { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Source Declaration public Microsoft.JSInterop.DotNetObjectReference<Network> Source { get; set; } Property Value Type Description Microsoft.JSInterop.DotNetObjectReference < Network >"
  },
  "api/VisNetwork.Blazor.Models.ClickedItem.html": {
    "href": "api/VisNetwork.Blazor.Models.ClickedItem.html",
    "title": "Class ClickedItem | VisNetwork.Blazor",
    "keywords": "Class ClickedItem Inheritance System.Object ClickedItem Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class ClickedItem : object Properties | Improve this Doc View Source EdgeId Declaration public string EdgeId { get; set; } Property Value Type Description System.String | Improve this Doc View Source LabelId Declaration public string LabelId { get; set; } Property Value Type Description System.String | Improve this Doc View Source NodeId Declaration public string NodeId { get; set; } Property Value Type Description System.String"
  },
  "api/VisNetwork.Blazor.Models.ClickEvent.html": {
    "href": "api/VisNetwork.Blazor.Models.ClickEvent.html",
    "title": "Class ClickEvent | VisNetwork.Blazor",
    "keywords": "Class ClickEvent Fired when the user clicks the mouse or taps on a touchscreen device. Inheritance System.Object BaseClickEvent ClickEvent DoubleClickEvent Inherited Members BaseClickEvent.Source BaseClickEvent.Nodes BaseClickEvent.Edges BaseClickEvent.Event BaseClickEvent.Pointer Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class ClickEvent : BaseClickEvent Properties | Improve this Doc View Source Items Declaration public List<ClickedItem> Items { get; set; } Property Value Type Description List < ClickedItem >"
  },
  "api/VisNetwork.Blazor.Models.ColorType.html": {
    "href": "api/VisNetwork.Blazor.Models.ColorType.html",
    "title": "Class ColorType | VisNetwork.Blazor",
    "keywords": "Class ColorType Inheritance System.Object ColorType Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class ColorType : object Constructors | Improve this Doc View Source ColorType() Declaration public ColorType() | Improve this Doc View Source ColorType(String, String, String, Nullable<Double>) Declaration public ColorType(string color, string hover, string highlight, double? opacity) Parameters Type Name Description System.String color System.String hover System.String highlight System.Nullable < System.Double > opacity Properties | Improve this Doc View Source Color The color of the edge when it is not selected or hovered over (assuming hover is enabled in the interaction module). The default is '#848484'. Declaration public string? Color { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Highlight The color the edge when it is selected. The default is '#848484'. Declaration public string? Highlight { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Hover The color the edge when the mouse hovers over it (assuming hover is enabled in the interaction module). The default is '#848484'. Declaration public string? Hover { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Inherit The default value is 'from' the edge will inherit the color from the border of the node on the 'from' side. When set to 'to', the border color from the 'to' node will be used. When set to 'both', the color will fade from the from color to the to color. 'both' is computationally intensive because the gradient is recomputed every redraw. This is required because the angles change when the nodes move. The default is 'from'. Declaration public string? Inherit { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Opacity It can be useful to set the opacity of an edge without manually changing all the colors. The opacity option will convert all colors (also when using inherit) to adhere to the supplied opacity. The allowed range of the opacity option is between 0 and 1. This is only done once so the performance impact is not too big. The default is 1.0. Declaration public double? Opacity { get; set; } Property Value Type Description System.Nullable < System.Double > Methods | Improve this Doc View Source Create(String) Declaration public static ColorType Create(string color) Parameters Type Name Description System.String color Returns Type Description ColorType"
  },
  "api/VisNetwork.Blazor.Models.ConfigureOptions.html": {
    "href": "api/VisNetwork.Blazor.Models.ConfigureOptions.html",
    "title": "Class ConfigureOptions | VisNetwork.Blazor",
    "keywords": "Class ConfigureOptions The options for the canvas. Inheritance System.Object ConfigureOptions Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class ConfigureOptions : object Properties | Improve this Doc View Source Enabled Toggle the configuration interface on or off. This is an optional parameter. If left undefined and any of the other properties of this object are defined, this will be set to true. The default is true. Declaration public bool? Enabled { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Filter Any combination of the following is allowed: nodes, edges, layout, interaction, manipulation, physics, selection, renderer. Note: JS lib allos String, Array, Boolean and Function. Declaration public string? Filter { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source ShowButton Show the generate options button at the bottom of the configurator. The default is true. Declaration public bool? ShowButton { get; set; } Property Value Type Description System.Nullable < System.Boolean >"
  },
  "api/VisNetwork.Blazor.Models.DeselectClickEvent.html": {
    "href": "api/VisNetwork.Blazor.Models.DeselectClickEvent.html",
    "title": "Class DeselectClickEvent | VisNetwork.Blazor",
    "keywords": "Class DeselectClickEvent Inheritance System.Object BaseClickEvent DeselectClickEvent Inherited Members BaseClickEvent.Source BaseClickEvent.Nodes BaseClickEvent.Edges BaseClickEvent.Event BaseClickEvent.Pointer Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class DeselectClickEvent : BaseClickEvent Properties | Improve this Doc View Source PreviousSelection Declaration public NodeEdgeSelection PreviousSelection { get; set; } Property Value Type Description NodeEdgeSelection"
  },
  "api/VisNetwork.Blazor.Models.DoubleClickEvent.html": {
    "href": "api/VisNetwork.Blazor.Models.DoubleClickEvent.html",
    "title": "Class DoubleClickEvent | VisNetwork.Blazor",
    "keywords": "Class DoubleClickEvent Fired when the user double clicks the mouse or double taps on a touchscreen device. Since a double click is in fact 2 clicks, 2 click events are fired, followed by a double click event. If you do not want to use the click events if a double click event is fired, just check the time between click events before processing them. Inheritance System.Object BaseClickEvent ClickEvent DoubleClickEvent Inherited Members ClickEvent.Items BaseClickEvent.Source BaseClickEvent.Nodes BaseClickEvent.Edges BaseClickEvent.Event BaseClickEvent.Pointer Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class DoubleClickEvent : ClickEvent"
  },
  "api/VisNetwork.Blazor.Models.DrawingEvent.html": {
    "href": "api/VisNetwork.Blazor.Models.DrawingEvent.html",
    "title": "Class DrawingEvent | VisNetwork.Blazor",
    "keywords": "Class DrawingEvent Inheritance System.Object DrawingEvent Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class DrawingEvent : object Properties | Improve this Doc View Source CanvasDataUrl Declaration public string CanvasDataUrl { get; set; } Property Value Type Description System.String"
  },
  "api/VisNetwork.Blazor.Models.Edge.html": {
    "href": "api/VisNetwork.Blazor.Models.Edge.html",
    "title": "Class Edge | VisNetwork.Blazor",
    "keywords": "Class Edge Inheritance System.Object EdgeOption Edge Implements IEquatable < Edge > Inherited Members EdgeOption.Arrows EdgeOption.EndPointOffset EdgeOption.ArrowStrikethrough EdgeOption.Chosen EdgeOption.Color EdgeOption.Dashes EdgeOption.Font EdgeOption.Hidden EdgeOption.HoverWidth EdgeOption.Label EdgeOption.LabelHighlightBold EdgeOption.Length EdgeOption.Physics EdgeOption.Scaling EdgeOption.SelectionWidth EdgeOption.Width EdgeOption.WidthConstraint EdgeOption.Value EdgeOption.SelfReference EdgeOption.Shadow EdgeOption.Smooth EdgeOption.Title Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class Edge : EdgeOption, IEquatable<Edge> Constructors | Improve this Doc View Source Edge() Declaration public Edge() | Improve this Doc View Source Edge(String, String, Nullable<String>) Declaration public Edge(string from, string to, string? title = null) Parameters Type Name Description System.String from System.String to System.Nullable < System.String > title Properties | Improve this Doc View Source From Edges are between two nodes, one to and one from. This is where you define the from node. You have to supply the corresponding node ID. This naturally only applies to individual edges. Declaration public string? From { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Id The id of the edge. The id is optional for edges. When not supplied, an UUID will be assigned to the edge. This naturally only applies to individual edges. Declaration public string? Id { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source To Edges are between two nodes, one to and one from. This is where you define the to node. You have to supply the corresponding node ID. This naturally only applies to individual edges. Declaration public string? To { get; set; } Property Value Type Description System.Nullable < System.String > Methods | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description System.Nullable < System.Object > obj Returns Type Description System.Boolean | Improve this Doc View Source Equals(Edge) Declaration public bool Equals(Edge other) Parameters Type Name Description Edge other Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Implements IEquatable<>"
  },
  "api/VisNetwork.Blazor.Models.EdgeOption.html": {
    "href": "api/VisNetwork.Blazor.Models.EdgeOption.html",
    "title": "Class EdgeOption | VisNetwork.Blazor",
    "keywords": "Class EdgeOption Inheritance System.Object EdgeOption Edge Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class EdgeOption : object Properties | Improve this Doc View Source Arrows Options for the size of the arrowheads. Declaration public Arrows Arrows { get; set; } Property Value Type Description Arrows | Improve this Doc View Source ArrowStrikethrough When false, the edge stops at the arrow. This can be useful if you have thick lines and you want the arrow to end in a point. Middle arrows are not affected by this. The default is true. Declaration public bool? ArrowStrikethrough { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Chosen When true, selecting or hovering on an edge will change it and its label's characteristics according to the default. When false, no change to the edge or its label will occur when the edge is chosen. The defualt is true. Declaration public bool? Chosen { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Color Color information of the edge. Declaration public ColorType Color { get; set; } Property Value Type Description ColorType | Improve this Doc View Source Dashes When true, the edge will be drawn as a dashed line. Note: JS lib support Array or Boolean. The default is false. Declaration public bool? Dashes { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source EndPointOffset Adjust the endpoints. It can be useful if you want to have the endpoints placed on the nodes borders. This feature is only possible when the ArrowStrikethrough is true. Declaration public EndPointOffsetOption EndPointOffset { get; set; } Property Value Type Description EndPointOffsetOption | Improve this Doc View Source Font Declaration public string? Font { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Hidden When true, the edge is not drawn. It is part still part of the physics simulation however! The default is false. Declaration public bool? Hidden { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source HoverWidth Assuming the hover behaviour is enabled in the interaction module, the hoverWidth determines the width of the edge when the user hovers over it with the mouse. The default is 0.5. Declaration public decimal? HoverWidth { get; set; } Property Value Type Description System.Nullable < System.Decimal > | Improve this Doc View Source Label The label of the edge. Declaration public string? Label { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source LabelHighlightBold Determines whether or not the label becomes bold when the edge is selected. The default is true. Declaration public bool? LabelHighlightBold { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Length The physics simulation gives edges a spring length. This value can override the length of the spring in rest. Declaration public int? Length { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Physics When true, the edge is part of the physics simulation. When false, it will not act as a spring. The default is true. Declaration public bool? Physics { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Scaling Declaration public EdgeScalingOptions Scaling { get; set; } Property Value Type Description EdgeScalingOptions | Improve this Doc View Source SelectionWidth The selectionWidth determines the width of the edge when the edge is selected. The defualt is 1. Note: JS lib support Number or Function. Declaration public int? SelectionWidth { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source SelfReference Option for circle drawn when to and from nodes are the same. Declaration public EdgeSelfReferenceOption SelfReference { get; set; } Property Value Type Description EdgeSelfReferenceOption | Improve this Doc View Source Shadow Option for edge shadow. Declaration public EdgeShadowOption Shadow { get; set; } Property Value Type Description EdgeShadowOption | Improve this Doc View Source Smooth Options for edge smoothing. Declaration public EdgeSmoothOptions Smooth { get; set; } Property Value Type Description EdgeSmoothOptions | Improve this Doc View Source Title Title to be displayed in a pop-up when the user hovers over the edge. Note: JS lib support an HTML element or a string containing plain text. Declaration public string? Title { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Value When a value is set, the edges' width will be scaled using the options in the scaling object defined above. Declaration public int? Value { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Width The width of the edge. If Value is set, this is not used. Declaration public int? Width { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source WidthConstraint If a number is specified, the maximum width of the edge's label is set to the value. The edge's label's lines will be broken on spaces to stay below the maximum. Declaration public int? WidthConstraint { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/VisNetwork.Blazor.Models.EdgeScalingOptions.html": {
    "href": "api/VisNetwork.Blazor.Models.EdgeScalingOptions.html",
    "title": "Class EdgeScalingOptions | VisNetwork.Blazor",
    "keywords": "Class EdgeScalingOptions Inheritance System.Object EdgeScalingOptions Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class EdgeScalingOptions : object Properties | Improve this Doc View Source Label When false, the label is not allowed to scale with the edge. If true it will scale using default settings. Note: JS lib supports Object or Boolean. Declaration public bool? Label { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Max This is the maximum allowed width when the edges are scaled using the value option. The default is 15. Declaration public int? Max { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Min If edges have a value, their widths are determined by the value, the scaling function and the min max values. The min value is the minimum allowed value. The default is 1. Declaration public int? Min { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/VisNetwork.Blazor.Models.EdgeSelection.html": {
    "href": "api/VisNetwork.Blazor.Models.EdgeSelection.html",
    "title": "Class EdgeSelection | VisNetwork.Blazor",
    "keywords": "Class EdgeSelection Inheritance System.Object EdgeSelection Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class EdgeSelection : object Properties | Improve this Doc View Source FromId Declaration public string FromId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Id Declaration public string Id { get; set; } Property Value Type Description System.String | Improve this Doc View Source ToId Declaration public string ToId { get; set; } Property Value Type Description System.String"
  },
  "api/VisNetwork.Blazor.Models.EdgeSelfReferenceOption.html": {
    "href": "api/VisNetwork.Blazor.Models.EdgeSelfReferenceOption.html",
    "title": "Class EdgeSelfReferenceOption | VisNetwork.Blazor",
    "keywords": "Class EdgeSelfReferenceOption Option for circle drawn when to and from nodes are the same. Inheritance System.Object EdgeSelfReferenceOption Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class EdgeSelfReferenceOption : object Properties | Improve this Doc View Source Angle This is the angle (Provided in radians) to indicate position for the circle. If position is not provided then it will be top-right (π / 4) corner. The default is pi / 4. Declaration public decimal? Angle { get; set; } Property Value Type Description System.Nullable < System.Decimal > | Improve this Doc View Source RenderBehindTheNode This is a flag that indicates whether self reference circle should be drawn as a full circle or rather should not overlap with parent node. The feault is true. Declaration public bool? RenderBehindTheNode { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Size This is the radius of circle. The default is 20. Declaration public int? Size { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/VisNetwork.Blazor.Models.EdgeShadowOption.html": {
    "href": "api/VisNetwork.Blazor.Models.EdgeShadowOption.html",
    "title": "Class EdgeShadowOption | VisNetwork.Blazor",
    "keywords": "Class EdgeShadowOption Inheritance System.Object EdgeShadowOption Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class EdgeShadowOption : object Properties | Improve this Doc View Source Color The color size of the shadow as a string. Supported formats are 'rgb(255,255,255)', 'rgba(255,255,255,1)' and '#FFFFFF'. The default is 'rgba(0,0,0,0.5)'. Declaration public string? Color { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Enabled Toggle the casting of shadows. If this option is not defined, it is set to true if any of the properties in this object are defined. The default is false. Declaration public bool? Enabled { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Size The blur size of the shadow. The default is 10. Declaration public int? Size { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source X The x offset. The default is 5. Declaration public int? X { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Y The y offset. The default is 5. Declaration public int? Y { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/VisNetwork.Blazor.Models.EdgeSmoothOptions.html": {
    "href": "api/VisNetwork.Blazor.Models.EdgeSmoothOptions.html",
    "title": "Class EdgeSmoothOptions | VisNetwork.Blazor",
    "keywords": "Class EdgeSmoothOptions Inheritance System.Object EdgeSmoothOptions Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class EdgeSmoothOptions : object Properties | Improve this Doc View Source Enabled Toggle smooth curves on and off. This is an optional option. If any of the other properties in this object are set, this option will be set to true. Default is true Declaration public bool? Enabled { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source ForceDirection Accepted options: ['horizontal', 'vertical', 'none']. This options is only used with the cubicBezier curves. When true, horizontal is chosen, when false, the direction that is larger (x distance between nodes vs y distance between nodes) is used. If the x distance is larger, horizontal. This is ment to be used with hierarchical layouts. JS lib supports bool or string Default is false/none Declaration public string? ForceDirection { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Roundness Accepted range: 0 .. 1.0. This parameter tweaks the roundness of the smooth curves for all types EXCEPT dynamic. Default is 0.5 Declaration public decimal? Roundness { get; set; } Property Value Type Description System.Nullable < System.Decimal > | Improve this Doc View Source Type Possible options: 'dynamic', 'continuous', 'discrete', 'diagonalCross', 'straightCross', 'horizontal', 'vertical', 'curvedCW', 'curvedCCW', 'cubicBezier' Default is 'dynamic' Declaration public string? Type { get; set; } Property Value Type Description System.Nullable < System.String >"
  },
  "api/VisNetwork.Blazor.Models.EndPointOffsetOption.html": {
    "href": "api/VisNetwork.Blazor.Models.EndPointOffsetOption.html",
    "title": "Class EndPointOffsetOption | VisNetwork.Blazor",
    "keywords": "Class EndPointOffsetOption Inheritance System.Object EndPointOffsetOption Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class EndPointOffsetOption : object Properties | Improve this Doc View Source From A negative number move the endpoint nearer the node's midpoint, and a positive number does the opposite. The default is 0. Declaration public int? From { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source To A negative number move the endpoint nearer the node's midpoint, and a positive number does the opposite. The default is 0. Declaration public int? To { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/VisNetwork.Blazor.Models.ForceAtlas2BasedOption.html": {
    "href": "api/VisNetwork.Blazor.Models.ForceAtlas2BasedOption.html",
    "title": "Class ForceAtlas2BasedOption | VisNetwork.Blazor",
    "keywords": "Class ForceAtlas2BasedOption Inheritance System.Object ForceAtlas2BasedOption Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class ForceAtlas2BasedOption : object Properties | Improve this Doc View Source AvoidOverlap Accepted range: [0 .. 1]. When larger than 0, the size of the node is taken into account. The distance will be calculated from the radius of the encompassing circle of the node for both the gravity model. Value 1 is maximum overlap avoidance. The default is 0. Declaration public double? AvoidOverlap { get; set; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source CentralGravity There is a central gravity attractor to pull the entire network back to the center. This is not dependent on distance. The default is 0.01. Declaration public decimal? CentralGravity { get; set; } Property Value Type Description System.Nullable < System.Decimal > | Improve this Doc View Source Damping Accepted range: [0 .. 1]. The damping factor is how much of the velocity from the previous physics simulation iteration carries over to the next iteration. The default is 0.4. Declaration public decimal? Damping { get; set; } Property Value Type Description System.Nullable < System.Decimal > | Improve this Doc View Source GravitationalConstant This is similar to the barnesHut method except that the falloff is linear instead of quadratic. The connectivity is also taken into account as a factor of the mass. If you want the repulsion to be stronger, decrease the value (so -1000, -2000). The default is -50. Declaration public int? GravitationalConstant { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source SpringConstant This is how 'sturdy' the springs are. Higher values mean stronger springs. The default is 0.08. Declaration public decimal? SpringConstant { get; set; } Property Value Type Description System.Nullable < System.Decimal > | Improve this Doc View Source SpringLength The edges are modelled as springs. This springLength here is the rest length of the spring. The default is 100. Declaration public int? SpringLength { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Theta This parameter determines the boundary between consolidated long range forces and individual short range forces. To oversimplify higher values are faster but generate more errors, lower values are slower but with less errors. The default is 0.5. Declaration public decimal? Theta { get; set; } Property Value Type Description System.Nullable < System.Decimal >"
  },
  "api/VisNetwork.Blazor.Models.HierarchicalOptions.html": {
    "href": "api/VisNetwork.Blazor.Models.HierarchicalOptions.html",
    "title": "Class HierarchicalOptions | VisNetwork.Blazor",
    "keywords": "Class HierarchicalOptions Inheritance System.Object HierarchicalOptions Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class HierarchicalOptions : object Properties | Improve this Doc View Source BlockShifting Method for reducing whitespace. Can be used alone or together with edge minimization. Each node will check for whitespace and will shift it's branch along with it for as far as it can, respecting the nodeSpacing on any level. This is mainly for the initial layout. If you enable physics, the layout will be determined by the physics. This will greatly speed up the stabilization time though! The default is true. Declaration public bool? BlockShifting { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Direction The direction of the hierarchical layout. The available options are: UD, DU, LR, RL. To simplify: up-down, down-up, left-right, right-left. The default is UD. Declaration public string? Direction { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source EdgeMinimization Method for reducing whitespace. Can be used alone or together with block shifting. Enabling block shifting will usually speed up the layout process. Each node will try to move along its free axis to reduce the total length of it's edges. This is mainly for the initial layout. If you enable physics, the layout will be determined by the physics. This will greatly speed up the stabilization time though! The default is true. Declaration public bool? EdgeMinimization { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Enabled Toggle the usage of the hierarchical layout system. If this option is not defined, it is set to true if any of the properties in this object are defined. The default is false. Declaration public bool? Enabled { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source LevelSeparation The distance between the different levels. The default is 150. Declaration public int? LevelSeparation { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source NodeSpacing Minimum distance between nodes on the free axis. This is only for the initial layout. If you enable physics, the node distance there will be the effective node distance. The default is 100. Declaration public int? NodeSpacing { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source ParentCentralization When true, the parents nodes will be centered again after the layout algorithm has been finished. Declaration public bool? ParentCentralization { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source ShakeTowards Controls whether in directed layout should all the roots be lined up at the top and their child nodes as close to their roots as possible (roots) or all the leaves lined up at the bottom and their parents as close to their children as possible (leaves, default). The default is roots. Declaration public string? ShakeTowards { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source SortMethod he algorithm used to ascertain the levels of the nodes based on the data. The possible options are: hubsize, directed. Hubsize takes the nodes with the most edges and puts them at the top.From that the rest of the hierarchy is evaluated. Directed adheres to the to and from data of the edges.A --> B so B is a level lower than A. The default is hubSize. Declaration public string? SortMethod { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source TreeSpacing Distance between different trees (independent networks). This is only for the initial layout. If you enable physics, the repulsion model will denote the distance between the trees. The default is 200. Declaration public int? TreeSpacing { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/VisNetwork.Blazor.Models.HierarchicalRepulsionOption.html": {
    "href": "api/VisNetwork.Blazor.Models.HierarchicalRepulsionOption.html",
    "title": "Class HierarchicalRepulsionOption | VisNetwork.Blazor",
    "keywords": "Class HierarchicalRepulsionOption Inheritance System.Object HierarchicalRepulsionOption Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class HierarchicalRepulsionOption : object Properties | Improve this Doc View Source AvoidOverlap Accepted range: [0 .. 1]. When larger than 0, the size of the node is taken into account. The distance will be calculated from the radius of the encompassing circle of the node for both the gravity model. Value 1 is maximum overlap avoidance. The default is 0. Declaration public double? AvoidOverlap { get; set; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source CentralGravity There is a central gravity attractor to pull the entire network back to the center. The default is 0.0. Declaration public decimal? CentralGravity { get; set; } Property Value Type Description System.Nullable < System.Decimal > | Improve this Doc View Source Damping Accepted range: [0 .. 1]. The damping factor is how much of the velocity from the previous physics simulation iteration carries over to the next iteration. The default is 0.09. Declaration public decimal? Damping { get; set; } Property Value Type Description System.Nullable < System.Decimal > | Improve this Doc View Source NodeDistance This is the range of influence for the repulsion. The default is 120. Declaration public int? NodeDistance { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source SpringConstant This is how 'sturdy' the springs are. Higher values mean stronger springs. The default is 0.01. Declaration public decimal? SpringConstant { get; set; } Property Value Type Description System.Nullable < System.Decimal > | Improve this Doc View Source SpringLength The edges are modelled as springs. This springLength here is the rest length of the spring. The defualt is 100. Declaration public int? SpringLength { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/VisNetwork.Blazor.Models.html": {
    "href": "api/VisNetwork.Blazor.Models.html",
    "title": "Namespace VisNetwork.Blazor.Models | VisNetwork.Blazor",
    "keywords": "Namespace VisNetwork.Blazor.Models Classes Arrows Options for arrows for edge. ArrowsOptions Options for arrow. BarnesHutOption BaseClickEvent ClickedItem ClickEvent Fired when the user clicks the mouse or taps on a touchscreen device. ColorType ConfigureOptions The options for the canvas. DeselectClickEvent DoubleClickEvent Fired when the user double clicks the mouse or double taps on a touchscreen device. Since a double click is in fact 2 clicks, 2 click events are fired, followed by a double click event. If you do not want to use the click events if a double click event is fired, just check the time between click events before processing them. DrawingEvent Edge EdgeOption EdgeScalingOptions EdgeSelection EdgeSelfReferenceOption Option for circle drawn when to and from nodes are the same. EdgeShadowOption EdgeSmoothOptions EndPointOffsetOption ForceAtlas2BasedOption HierarchicalOptions HierarchicalRepulsionOption Icon InteractionOptions Options for the interaction module. The interaction module is used for all user interaction with the network. Handles mouse and touch events as well as the navigation buttons and the popups. KeyboardOption Keyboard options for interaction module. KeyboardSpeedOption Keyboard speed options. LayoutOptions ManipulationOptions The options for the manipulation module. The manipulation module acts as the camera that looks on the canvas. Does the animation, zooming and focusing. NetworkData NetworkOptions Node NodeColorType The color object contains the color information of the node in every situation. NodeColorType.BorderBackgroundColor NodeEdgeComposite NodeEdgeSelection NodeFixedOption NodeHeightConstraint NodeImagePaddingOption NodeMarginOption NodeOption NodeScalingLabelOptions NodeScalingOptions NodeSelection NodeShadowOption PhysicsOptions RepulsionOption StabilizationOption WindOption"
  },
  "api/VisNetwork.Blazor.Models.Icon.html": {
    "href": "api/VisNetwork.Blazor.Models.Icon.html",
    "title": "Class Icon | VisNetwork.Blazor",
    "keywords": "Class Icon Inheritance System.Object Icon Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class Icon : object Properties | Improve this Doc View Source Code This is the code of the icon, for example '\\uf007'. Declaration public string? Code { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Color The color of the icon. Declaration public string? Color { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Face The possible values for the face option are any font faces that are loaded on given page such as 'FontAwesome' or 'Ionicons'. Declaration public string? Face { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Size The size of the icon. Declaration public int? Size { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Weight This allows for weight to be forced regardless of selection status. For example Font Awesome 5 doesn't work properly unless weight is forced to 'bold' or 700. If this option is set then selection is indicated by bigger size instead of bold font face. Declaration public string? Weight { get; set; } Property Value Type Description System.Nullable < System.String >"
  },
  "api/VisNetwork.Blazor.Models.InteractionOptions.html": {
    "href": "api/VisNetwork.Blazor.Models.InteractionOptions.html",
    "title": "Class InteractionOptions | VisNetwork.Blazor",
    "keywords": "Class InteractionOptions Options for the interaction module. The interaction module is used for all user interaction with the network. Handles mouse and touch events as well as the navigation buttons and the popups. Inheritance System.Object InteractionOptions Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class InteractionOptions : object Properties | Improve this Doc View Source DragNodes When true, the nodes that are not fixed can be dragged by the user. The default is true. Declaration public bool? DragNodes { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source DragView When true, the view can be dragged around by the user. The default is true. Declaration public bool? DragView { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source HideEdgesOnDrag When true, the edges are not drawn when dragging the view. This can greatly speed up responsiveness on dragging, improving user experience. The default is false. Declaration public bool? HideEdgesOnDrag { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source HideEdgesOnZoom When true, the edges are not drawn when zooming the view. This can greatly speed up responsiveness on zooming, improving user experience. The default is false. Declaration public bool? HideEdgesOnZoom { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source HideNodesOnDrag When true, the nodes are not drawn when dragging the view. This can greatly speed up responsiveness on dragging, improving user experience. The default is false. Declaration public bool? HideNodesOnDrag { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Hover When true, the nodes use their hover colors when the mouse moves over them. The default is false. Declaration public bool? Hover { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source HoverConnectedEdges When true, on hovering over a node, it's connecting edges are highlighted. The default is true. Declaration public bool? HoverConnectedEdges { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Keyboard Keyboard options. Declaration public KeyboardOption Keyboard { get; set; } Property Value Type Description KeyboardOption | Improve this Doc View Source Multiselect When true, a longheld click (or touch) as well as a control-click will add to the selection. The default is false. Declaration public bool? Multiselect { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source NavigationButtons When true, navigation buttons are drawn on the network canvas. These are HTML buttons and can be completely customized using CSS. The default is false. Declaration public bool? NavigationButtons { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Selectable When true, the nodes and edges can be selected by the user. The default is true. Declaration public bool? Selectable { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source SelectConnectedEdges When true, on selecting a node, its connecting edges are highlighted. The default is true. Declaration public bool? SelectConnectedEdges { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source TooltipDelay When nodes or edges have a defined 'title' field, this can be shown as a pop-up tooltip. The tooltip itself is an HTML element that can be fully styled using CSS. The delay is the amount of time in milliseconds it takes before the tooltip is shown. The default is 300. Declaration public int? TooltipDelay { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source ZoomSpeed How fast/rough or slow/precise zooming is. The default is 1. Declaration public int? ZoomSpeed { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source ZoomView When true, the user can zoom in. The default is true. Declaration public bool? ZoomView { get; set; } Property Value Type Description System.Nullable < System.Boolean >"
  },
  "api/VisNetwork.Blazor.Models.KeyboardOption.html": {
    "href": "api/VisNetwork.Blazor.Models.KeyboardOption.html",
    "title": "Class KeyboardOption | VisNetwork.Blazor",
    "keywords": "Class KeyboardOption Keyboard options for interaction module. Inheritance System.Object KeyboardOption Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class KeyboardOption : object Properties | Improve this Doc View Source BindToWindow When binding the keyboard shortcuts to the window, they will work regardless of which DOM object has the focus. If you have multiple networks on your page, you could set this to false, making sure the keyboard shortcuts only work on the network that has the focus. The default is true. Declaration public bool? BindToWindow { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Enabled Toggle the usage of the keyboard shortcuts. If this option is not defined, it is set to true if any of the properties in this object are defined. Declaration public bool? Enabled { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Speed Options for speed when pressing a key or pressing a navigation button. Declaration public KeyboardSpeedOption Speed { get; set; } Property Value Type Description KeyboardSpeedOption"
  },
  "api/VisNetwork.Blazor.Models.KeyboardSpeedOption.html": {
    "href": "api/VisNetwork.Blazor.Models.KeyboardSpeedOption.html",
    "title": "Class KeyboardSpeedOption | VisNetwork.Blazor",
    "keywords": "Class KeyboardSpeedOption Keyboard speed options. Inheritance System.Object KeyboardSpeedOption Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class KeyboardSpeedOption : object Properties | Improve this Doc View Source X The speed at which the view moves in the x direction on pressing a key or pressing a navigation button. The default is 1. Declaration public int? X { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Y The speed at which the view moves in the y direction on pressing a key or pressing a navigation button. The default is 1. Declaration public int? Y { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Zoom The speed at which the view zooms in or out pressing a key or pressing a navigation button. The default is 0.02. Declaration public decimal? Zoom { get; set; } Property Value Type Description System.Nullable < System.Decimal >"
  },
  "api/VisNetwork.Blazor.Models.LayoutOptions.html": {
    "href": "api/VisNetwork.Blazor.Models.LayoutOptions.html",
    "title": "Class LayoutOptions | VisNetwork.Blazor",
    "keywords": "Class LayoutOptions Inheritance System.Object LayoutOptions Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class LayoutOptions : object Properties | Improve this Doc View Source ClusterThreshold Cluster threshold to which improvedLayout applies. The default is 150. Declaration public int? ClusterThreshold { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Hierarchical Options for hierarchical layout. Declaration public HierarchicalOptions Hierarchical { get; set; } Property Value Type Description HierarchicalOptions | Improve this Doc View Source ImprovedLayout When enabled, the network will use the Kamada Kawai algorithm for initial layout. For networks larger than 100 nodes, clustering will be performed automatically to reduce the amount of nodes. This can greatly improve the stabilization times. If the network is very interconnected (no or few leaf nodes), this may not work and it will revert back to the old method. Performance will be improved in the future. The default is true. Declaration public bool? ImprovedLayout { get; set; } Property Value Type Description System.Nullable < System.Boolean >"
  },
  "api/VisNetwork.Blazor.Models.ManipulationOptions.html": {
    "href": "api/VisNetwork.Blazor.Models.ManipulationOptions.html",
    "title": "Class ManipulationOptions | VisNetwork.Blazor",
    "keywords": "Class ManipulationOptions The options for the manipulation module. The manipulation module acts as the camera that looks on the canvas. Does the animation, zooming and focusing. Inheritance System.Object ManipulationOptions Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class ManipulationOptions : object Properties | Improve this Doc View Source AddEdge Declaration public bool? AddEdge { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source AddNode Declaration public bool? AddNode { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source ControlNodeStyle Declaration public NodeOption ControlNodeStyle { get; set; } Property Value Type Description NodeOption | Improve this Doc View Source DeleteEdge Declaration public bool? DeleteEdge { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source DeleteNode Declaration public bool? DeleteNode { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source EditEdge Declaration public bool? EditEdge { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Enabled Declaration public bool? Enabled { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source InitiallyActive Declaration public bool? InitiallyActive { get; set; } Property Value Type Description System.Nullable < System.Boolean >"
  },
  "api/VisNetwork.Blazor.Models.NetworkData.html": {
    "href": "api/VisNetwork.Blazor.Models.NetworkData.html",
    "title": "Class NetworkData | VisNetwork.Blazor",
    "keywords": "Class NetworkData Inheritance System.Object NetworkData Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class NetworkData : object Properties | Improve this Doc View Source Edges Declaration public IReadOnlyCollection<Edge> Edges { get; set; } Property Value Type Description IReadOnlyCollection < Edge > | Improve this Doc View Source Nodes Declaration public IReadOnlyCollection<Node> Nodes { get; set; } Property Value Type Description IReadOnlyCollection < Node >"
  },
  "api/VisNetwork.Blazor.Models.NetworkOptions.html": {
    "href": "api/VisNetwork.Blazor.Models.NetworkOptions.html",
    "title": "Class NetworkOptions | VisNetwork.Blazor",
    "keywords": "Class NetworkOptions Inheritance System.Object NetworkOptions Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class NetworkOptions : object Properties | Improve this Doc View Source AutoResize If true, the Network will automatically detect when its container is resized, and redraw itself accordingly. If false, the Network can be forced to repaint after its container has been resized using the function redraw() and setSize(). The default is true. Declaration public bool? AutoResize { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source ClickToUse When a Network is configured to be clickToUse, it will react to mouse and touch events only when active. When active, a blue shadow border is displayed around the Network. The network is set active by clicking on it, and is changed to inactive again by clicking outside the Network or by pressing the ESC key. The default is false. Declaration public bool? ClickToUse { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Configure Options for the HTML part of the canvas. Declaration public ConfigureOptions Configure { get; set; } Property Value Type Description ConfigureOptions | Improve this Doc View Source Edges The global edge options and styles. Declaration public EdgeOption Edges { get; set; } Property Value Type Description EdgeOption | Improve this Doc View Source Height The height of the canvas. Can be in percentages or pixels (ie. '400px'). The default is '100%'. Declaration public string? Height { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Interaction Options for the interaction module. Declaration public InteractionOptions Interaction { get; set; } Property Value Type Description InteractionOptions | Improve this Doc View Source Layout Options for the layout module. Declaration public LayoutOptions Layout { get; set; } Property Value Type Description LayoutOptions | Improve this Doc View Source Locale Select the locale. By default, the language is English. Declaration public string? Locale { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Manipulation Options for the manipulation module. Declaration public ManipulationOptions Manipulation { get; set; } Property Value Type Description ManipulationOptions | Improve this Doc View Source Nodes The global node options and styles. Declaration public NodeOption Nodes { get; set; } Property Value Type Description NodeOption | Improve this Doc View Source Physics Options for the physics module. Declaration public PhysicsOptions Physics { get; set; } Property Value Type Description PhysicsOptions | Improve this Doc View Source Width The width of the canvas. Can be in percentages or pixels (ie. '400px'). The default is '100%'. Declaration public string? Width { get; set; } Property Value Type Description System.Nullable < System.String >"
  },
  "api/VisNetwork.Blazor.Models.Node.html": {
    "href": "api/VisNetwork.Blazor.Models.Node.html",
    "title": "Class Node | VisNetwork.Blazor",
    "keywords": "Class Node Inheritance System.Object NodeOption Node Implements IEquatable < Node > Inherited Members NodeOption.BorderWidth NodeOption.BorderWidthSelected NodeOption.BrokenImage NodeOption.Chosen NodeOption.Color NodeOption.Opacity NodeOption.Fixed NodeOption.Font NodeOption.Group NodeOption.NodeHeightConstraint NodeOption.Hidden NodeOption.Icon NodeOption.Image NodeOption.ImagePadding NodeOption.Label NodeOption.LabelHighlightBold NodeOption.Level NodeOption.Margin NodeOption.Mass NodeOption.Physics NodeOption.Scaling NodeOption.Shadow NodeOption.Shape NodeOption.Size NodeOption.Title NodeOption.Value NodeOption.X NodeOption.Y Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class Node : NodeOption, IEquatable<Node> Constructors | Improve this Doc View Source Node() Declaration public Node() | Improve this Doc View Source Node(String, String, Int32, String, Nullable<String>) Declaration public Node(string id, string label, int level, string shape, string? title = null) Parameters Type Name Description System.String id System.String label System.Int32 level System.String shape System.Nullable < System.String > title Properties | Improve this Doc View Source Id The id of the node. The id is mandatory for nodes and they have to be unique. This should obviously be set per node, not globally. Declaration public string? Id { get; set; } Property Value Type Description System.Nullable < System.String > Methods | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description System.Nullable < System.Object > obj Returns Type Description System.Boolean | Improve this Doc View Source Equals(Node) Declaration public bool Equals(Node other) Parameters Type Name Description Node other Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Implements IEquatable<>"
  },
  "api/VisNetwork.Blazor.Models.NodeColorType.BorderBackgroundColor.html": {
    "href": "api/VisNetwork.Blazor.Models.NodeColorType.BorderBackgroundColor.html",
    "title": "Class NodeColorType.BorderBackgroundColor | VisNetwork.Blazor",
    "keywords": "Class NodeColorType.BorderBackgroundColor Inheritance System.Object NodeColorType.BorderBackgroundColor Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class BorderBackgroundColor : object Properties | Improve this Doc View Source Background The color of the background of the node. Declaration public string? Background { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Border The color of the border of the node. Declaration public string? Border { get; set; } Property Value Type Description System.Nullable < System.String >"
  },
  "api/VisNetwork.Blazor.Models.NodeColorType.html": {
    "href": "api/VisNetwork.Blazor.Models.NodeColorType.html",
    "title": "Class NodeColorType | VisNetwork.Blazor",
    "keywords": "Class NodeColorType The color object contains the color information of the node in every situation. Inheritance System.Object NodeColorType Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class NodeColorType : object Properties | Improve this Doc View Source Background The color of the background of the node when it is not selected or hovered over (assuming hover is enabled in the interaction module). Declaration public string? Background { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Border The color of the border of the node when it is not selected or hovered over (assuming hover is enabled in the interaction module). Declaration public string? Border { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Highlight The color of the border and background of the node when it is selected. Declaration public NodeColorType.BorderBackgroundColor Highlight { get; set; } Property Value Type Description NodeColorType.BorderBackgroundColor | Improve this Doc View Source Hover The color of the border and background of the node when the mouse hovers over it (assuming hover is enabled in the interaction module). Declaration public NodeColorType.BorderBackgroundColor Hover { get; set; } Property Value Type Description NodeColorType.BorderBackgroundColor"
  },
  "api/VisNetwork.Blazor.Models.NodeEdgeComposite.html": {
    "href": "api/VisNetwork.Blazor.Models.NodeEdgeComposite.html",
    "title": "Class NodeEdgeComposite | VisNetwork.Blazor",
    "keywords": "Class NodeEdgeComposite Inheritance System.Object NodeEdgeComposite Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class NodeEdgeComposite : object Properties | Improve this Doc View Source Edges Declaration public IReadOnlyCollection<string> Edges { get; set; } Property Value Type Description IReadOnlyCollection < System.String > | Improve this Doc View Source Nodes Declaration public IReadOnlyCollection<string> Nodes { get; set; } Property Value Type Description IReadOnlyCollection < System.String >"
  },
  "api/VisNetwork.Blazor.Models.NodeEdgeSelection.html": {
    "href": "api/VisNetwork.Blazor.Models.NodeEdgeSelection.html",
    "title": "Class NodeEdgeSelection | VisNetwork.Blazor",
    "keywords": "Class NodeEdgeSelection Inheritance System.Object NodeEdgeSelection Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class NodeEdgeSelection : object Properties | Improve this Doc View Source Edges Declaration public IReadOnlyCollection<EdgeSelection> Edges { get; set; } Property Value Type Description IReadOnlyCollection < EdgeSelection > | Improve this Doc View Source Nodes Declaration public IReadOnlyCollection<NodeSelection> Nodes { get; set; } Property Value Type Description IReadOnlyCollection < NodeSelection >"
  },
  "api/VisNetwork.Blazor.Models.NodeFixedOption.html": {
    "href": "api/VisNetwork.Blazor.Models.NodeFixedOption.html",
    "title": "Class NodeFixedOption | VisNetwork.Blazor",
    "keywords": "Class NodeFixedOption Inheritance System.Object NodeFixedOption Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class NodeFixedOption : object Properties | Improve this Doc View Source X When true, the node will not move in the X direction. Declaration public bool X { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Y When true, the node will not move in the Y direction. Declaration public bool Y { get; set; } Property Value Type Description System.Boolean"
  },
  "api/VisNetwork.Blazor.Models.NodeHeightConstraint.html": {
    "href": "api/VisNetwork.Blazor.Models.NodeHeightConstraint.html",
    "title": "Class NodeHeightConstraint | VisNetwork.Blazor",
    "keywords": "Class NodeHeightConstraint Inheritance System.Object NodeHeightConstraint Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class NodeHeightConstraint : object Properties | Improve this Doc View Source Minimum If a number is specified, the value is used as the minimum height of the node. The node's height will be set to the minimum if less than the value. Declaration public int? Minimum { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Valign Valid values are 'top', 'middle', and 'bottom'. When specified, if the height of the label text is less than the minimum (including any top or bottom margins), it will be offset vertically to the designated position. Declaration public string? Valign { get; set; } Property Value Type Description System.Nullable < System.String >"
  },
  "api/VisNetwork.Blazor.Models.NodeImagePaddingOption.html": {
    "href": "api/VisNetwork.Blazor.Models.NodeImagePaddingOption.html",
    "title": "Class NodeImagePaddingOption | VisNetwork.Blazor",
    "keywords": "Class NodeImagePaddingOption Inheritance System.Object NodeImagePaddingOption Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class NodeImagePaddingOption : object Properties | Improve this Doc View Source Bottom The bottom margin of the image inside the shape is set to this value. The default is 0. Declaration public int? Bottom { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Left The left margin of the image inside the shape is set to this value. The default is 0. Declaration public int? Left { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Right The right margin of the image inside the shape is set to this value. The default is 0. Declaration public int? Right { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Top The top padding of the image inside the shape is set to this value. The default is 0. Declaration public int? Top { get; set; } Property Value Type Description System.Nullable < System.Int32 > Methods | Improve this Doc View Source CreateWithEqualPadding(Int32) Declaration public static NodeImagePaddingOption CreateWithEqualPadding(int padding) Parameters Type Name Description System.Int32 padding Returns Type Description NodeImagePaddingOption"
  },
  "api/VisNetwork.Blazor.Models.NodeMarginOption.html": {
    "href": "api/VisNetwork.Blazor.Models.NodeMarginOption.html",
    "title": "Class NodeMarginOption | VisNetwork.Blazor",
    "keywords": "Class NodeMarginOption Inheritance System.Object NodeMarginOption Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class NodeMarginOption : object Properties | Improve this Doc View Source Bottom The bottom margin of the label is set to this value. The default is 5. Declaration public int? Bottom { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Left The left margin of the label is set to this value. The default is 5. Declaration public int? Left { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Right The right margin of the label is set to this value. The default is 5. Declaration public int? Right { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Top The top margin of the label is set to this value. The default is 5. Declaration public int? Top { get; set; } Property Value Type Description System.Nullable < System.Int32 > Methods | Improve this Doc View Source CreateWithEqualPadding(Int32) Declaration public static NodeMarginOption CreateWithEqualPadding(int padding) Parameters Type Name Description System.Int32 padding Returns Type Description NodeMarginOption"
  },
  "api/VisNetwork.Blazor.Models.NodeOption.html": {
    "href": "api/VisNetwork.Blazor.Models.NodeOption.html",
    "title": "Class NodeOption | VisNetwork.Blazor",
    "keywords": "Class NodeOption Inheritance System.Object NodeOption Node Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class NodeOption : object Properties | Improve this Doc View Source BorderWidth The width of the border of the node. Declaration public int? BorderWidth { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source BorderWidthSelected The width of the border of the node when it is selected. When undefined, the borderWidth * 2 is used. Declaration public int? BorderWidthSelected { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source BrokenImage When the shape is set to image or circularImage, this option can be an URL to a backup image in case the URL supplied in the image option cannot be resolved. Declaration public string? BrokenImage { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Chosen When true, selecting or hovering on a node will cahnge it and itss label's characteristics according to the defaulult. When false, no change to the node or its label will occur when the node is chosen. Note: JS lib support boolen or object. Declaration public bool? Chosen { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Color Color options for node. Note: JS lib support setting single color value directly in this preoperty. Declaration public NodeColorType Color { get; set; } Property Value Type Description NodeColorType | Improve this Doc View Source Fixed Control if movement in either X or Y direction is enabled. Note: JS lib support setting boolean or object with fixed x or y. Declaration public NodeFixedOption Fixed { get; set; } Property Value Type Description NodeFixedOption | Improve this Doc View Source Font Defines the font of the label. Note: JS lib supports both string and object. Declaration public string? Font { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Group When not null, the node will belong to the defined group. Styling information of that group will apply to this node. Node specific styling overrides group styling. Declaration public string? Group { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Hidden When true, the node will not be shown. It will still be part of the physics simulation though! Declaration public bool? Hidden { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Icon Icon option only used when shape is set to icon. Declaration public Icon Icon { get; set; } Property Value Type Description Icon | Improve this Doc View Source Image When the shape is set to image or circularImage, this option should be the URL to an image. If the image cannot be found, the brokenImage option can be used. Note: JS lib support string and object with selected image and unselected image. Declaration public string? Image { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source ImagePadding Options for image padding inside the shape. Only used when shape is image or circularImage. Declaration public NodeImagePaddingOption ImagePadding { get; set; } Property Value Type Description NodeImagePaddingOption | Improve this Doc View Source Label The label is the piece of text shown in or under the node, depending on the shape. Declaration public string? Label { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source LabelHighlightBold Determines whether or not the label becomes bold when the node is selected. Declaration public bool? LabelHighlightBold { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Level When using the hierarchical layout, the level determines where the node is going to be positioned. Declaration public int? Level { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Margin The margins of the label. Only used when the shape is set to box, circle, database, icon or text. Declaration public NodeMarginOption Margin { get; set; } Property Value Type Description NodeMarginOption | Improve this Doc View Source Mass The barnesHut physics model (which is enabled by default) is based on an inverted gravity model. By increasing the mass of a node, you increase it's repulsion. Values between 0 and 1 are not recommended. Negative or zero values are not allowed.These will generate a console error and will be set to 1. Declaration public int? Mass { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source NodeHeightConstraint Node height constraints. The default is no height constraint applied. Declaration public NodeHeightConstraint NodeHeightConstraint { get; set; } Property Value Type Description NodeHeightConstraint | Improve this Doc View Source Opacity Overall opacity of a node (overrides any opacity on border, background, image, and shadow). Declaration public double? Opacity { get; set; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source Physics When false, the node is not part of the physics simulation. It will not move except for from manual dragging. Declaration public bool? Physics { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Scaling If the Value option is specified, the size of the nodes will be scaled according to the properties in this object. All node shapes can be scaled, but some only when label scaling is enabled as their size is based on the size of the label. Only scalable when label scaling is enabled are: ellipse, cricle, database, box, text. Always scalable are: image, circularImage, diamon, dot, star, triangle, triangleDown, hexagon, square and icon. Keep in mind that when using scaling, the Size option is neglected. Declaration public NodeScalingOptions Scaling { get; set; } Property Value Type Description NodeScalingOptions | Improve this Doc View Source Shadow Option for node shadow. Declaration public NodeShadowOption Shadow { get; set; } Property Value Type Description NodeShadowOption | Improve this Doc View Source Shape The shape defines what the node looks like. There are three types of nodes. One type has the label inside of it and the other type has the label underneath it. The third type is a custom shape you can draw whatever you want to represent the node. The types with the label inside of it are: ellipse, circle, database, box, text. The ones with the label outside of it are: image, circularImage, diamond, dot, star, triangle, triangleDown, hexagon, square and icon. NOTE: JS lib support custom and create own using ctxRender option. Declaration public string? Shape { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Size The size is used to determine the size of node shapes that do not have the label inside of them. These shapes are: image, circularImage, diamond, dot, star, triangle, triangleDown, hexagon, square and icon. Declaration public int? Size { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Title Title to be displayed in a pop-up when the user hovers over the node. NOTE: JS lib the title can be an HTML element or a string containing plain text. Declaration public string? Title { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Value When a value is set, the nodes will be scaled using the options in the scaling object defined above. Declaration public double? Value { get; set; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source X This gives a node its initial position on the x axis. When using hierarchical layout, this value has no effect. When using stabilization, the stabilized position may be different from the initial one (the node will start at this position but may move to different location based on the stabilization configuration). To lock the node to this position, turn off physics or set fixed.x node option to true. Declaration public int? X { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Y This gives a node its initial position on the y axis. When using hierarchical layout, this value has no effect. When using stabilization, the stabilized position may be different from the initial one (the node will start at this position but may move to different location based on the stabilization configuration). To lock the node to this position, turn off physics or set fixed.y node option to true. Declaration public int? Y { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/VisNetwork.Blazor.Models.NodeScalingLabelOptions.html": {
    "href": "api/VisNetwork.Blazor.Models.NodeScalingLabelOptions.html",
    "title": "Class NodeScalingLabelOptions | VisNetwork.Blazor",
    "keywords": "Class NodeScalingLabelOptions Inheritance System.Object NodeScalingLabelOptions Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class NodeScalingLabelOptions : object Properties | Improve this Doc View Source DrawThreshold When zooming out, the font will be drawn smaller. This defines a lower limit for when the font is drawn. When using font scaling, you can use this together with the maxVisible to first show labels of important nodes when zoomed out and only show the rest when zooming in. The default is 5 Declaration public int? DrawThreshold { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Enabled Toggle the scaling of the label on or off. If this option is not defined, it is set to true if any of the properties in this object are defined. Declaration public bool Enabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Max The maximum font-size used for labels when scaling. The default is 30. Declaration public int? Max { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source MaxVisible When zooming in, the font is drawn larger as well. You can limit the perceived font size using this option. If set to 30, the font will never look larger than size 30 zoomed at 100%. The default is 30 Declaration public int? MaxVisible { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Min The minimum font-size used for labels when scaling. The default is 14. Declaration public int? Min { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/VisNetwork.Blazor.Models.NodeScalingOptions.html": {
    "href": "api/VisNetwork.Blazor.Models.NodeScalingOptions.html",
    "title": "Class NodeScalingOptions | VisNetwork.Blazor",
    "keywords": "Class NodeScalingOptions Inheritance System.Object NodeScalingOptions Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class NodeScalingOptions : object Properties | Improve this Doc View Source Label This can be false if the label is not allowed to scale with the node. If true it will scale using default settings. Note: JS lib supports Object or Boolean. Declaration public NodeScalingLabelOptions Label { get; set; } Property Value Type Description NodeScalingLabelOptions | Improve this Doc View Source Max This is the maximum allowed size when the nodes are scaled using the value option. The default is 30. Declaration public int? Max { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Min If nodes have a value, their sizes are determined by the value, the scaling function and the min max values. The min value is the minimum allowed value. The default is 10. Declaration public int? Min { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/VisNetwork.Blazor.Models.NodeSelection.html": {
    "href": "api/VisNetwork.Blazor.Models.NodeSelection.html",
    "title": "Class NodeSelection | VisNetwork.Blazor",
    "keywords": "Class NodeSelection Inheritance System.Object NodeSelection Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class NodeSelection : object Properties | Improve this Doc View Source Id Declaration public string Id { get; set; } Property Value Type Description System.String | Improve this Doc View Source X Declaration public double X { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Y Declaration public double Y { get; set; } Property Value Type Description System.Double"
  },
  "api/VisNetwork.Blazor.Models.NodeShadowOption.html": {
    "href": "api/VisNetwork.Blazor.Models.NodeShadowOption.html",
    "title": "Class NodeShadowOption | VisNetwork.Blazor",
    "keywords": "Class NodeShadowOption Inheritance System.Object NodeShadowOption Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class NodeShadowOption : object Properties | Improve this Doc View Source Color The color size of the shadow as a string. Supported formats are 'rgb(255,255,255)', 'rgba(255,255,255,1)' and '#FFFFFF'. The default is 'rgba(0,0,0,0.5)'. Declaration public string? Color { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Enabled Toggle the casting of shadows. If this option is not defined, it is set to true if any of the properties in this object are defined. The default is false. Declaration public bool? Enabled { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Size The blur size of the shadow. The default is 10. Declaration public int? Size { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source X The x offset. The default is 5. Declaration public int? X { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Y The y offset. The default is 5. Declaration public int? Y { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/VisNetwork.Blazor.Models.PhysicsOptions.html": {
    "href": "api/VisNetwork.Blazor.Models.PhysicsOptions.html",
    "title": "Class PhysicsOptions | VisNetwork.Blazor",
    "keywords": "Class PhysicsOptions Inheritance System.Object PhysicsOptions Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class PhysicsOptions : object Properties | Improve this Doc View Source AdaptiveTimestep If this is enabled, the timestep will intelligently be adapted (only during the stabilization stage if stabilization is enabled!) to greatly decrease stabilization times. The timestep configured above is taken as the minimum timestep The default is true. Declaration public bool? AdaptiveTimestep { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source BarnesHut Options for BarnesHut solver. Recommended solver for non-hierarchical layouts. Declaration public BarnesHutOption BarnesHut { get; set; } Property Value Type Description BarnesHutOption | Improve this Doc View Source Enabled Toggle the physics system on or off. This property is optional. If you define any of the options below and enabled is undefined, this will be set to true. The default is true. Declaration public bool? Enabled { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source ForceAtlas2Based Options for Force Atlas 2 solver. Declaration public ForceAtlas2BasedOption ForceAtlas2Based { get; set; } Property Value Type Description ForceAtlas2BasedOption | Improve this Doc View Source HierarchicalRepulsion Options for the hierarchical repulsion model. Based on the repulsion solver but the levels are taken into account and the forces are normalized. Declaration public HierarchicalRepulsionOption HierarchicalRepulsion { get; set; } Property Value Type Description HierarchicalRepulsionOption | Improve this Doc View Source MaxVelocity The physics module limits the maximum velocity of the nodes to increase the time to stabilization. This is the maximum value. The default is 50. Declaration public decimal? MaxVelocity { get; set; } Property Value Type Description System.Nullable < System.Decimal > | Improve this Doc View Source MinVelocity Once the minimum velocity is reached for all nodes, we assume the network has been stabilized and the simulation stops. The default is 0.1. Declaration public decimal? MinVelocity { get; set; } Property Value Type Description System.Nullable < System.Decimal > | Improve this Doc View Source Repulsion Options for repulsion solver. Assumes nodes have a simplified repulsion field around them. It's force linearly decreases from 1(at 0.5 nodeDistance and smaller) to 0 (at 2 nodeDistance). Declaration public RepulsionOption Repulsion { get; set; } Property Value Type Description RepulsionOption | Improve this Doc View Source Solver Possible options: 'barnesHut', 'repulsion', 'hierarchicalRepulsion', 'forceAtlas2Based'. When setting the hierarchical layout, the hierarchical repulsion solver is automatically selected, regardless of what you fill in here. The default is barnesHut. Declaration public string? Solver { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Stabilization Options for stabilization. Declaration public StabilizationOption Stabilization { get; set; } Property Value Type Description StabilizationOption | Improve this Doc View Source Timestep The physics simulation is discrete. This means we take a step in time, calculate the forces, move the nodes and take another step. If you increase this number the steps will be too large and the network can get unstable. If you see a lot of jittery movement in the network, you may want to reduce this value a little. The default is 0.5. Declaration public decimal? Timestep { get; set; } Property Value Type Description System.Nullable < System.Decimal > | Improve this Doc View Source Wind A force that pushes all non-fixed nodes in the given direction. Requires all nodes are connected to nodes which are 'fixed' otherwise non-attached nodes will keep moving indefinitely. Declaration public WindOption Wind { get; set; } Property Value Type Description WindOption"
  },
  "api/VisNetwork.Blazor.Models.RepulsionOption.html": {
    "href": "api/VisNetwork.Blazor.Models.RepulsionOption.html",
    "title": "Class RepulsionOption | VisNetwork.Blazor",
    "keywords": "Class RepulsionOption Inheritance System.Object RepulsionOption Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class RepulsionOption : object Properties | Improve this Doc View Source CentralGravity There is a central gravity attractor to pull the entire network back to the center. The default is 0.2. Declaration public decimal? CentralGravity { get; set; } Property Value Type Description System.Nullable < System.Decimal > | Improve this Doc View Source Damping Accepted range: [0 .. 1]. The damping factor is how much of the velocity from the previous physics simulation iteration carries over to the next iteration. The default is 0.09. Declaration public decimal? Damping { get; set; } Property Value Type Description System.Nullable < System.Decimal > | Improve this Doc View Source NodeDistance This is the range of influence for the repulsion. The default is 100. Declaration public int? NodeDistance { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source SpringConstant This is how 'sturdy' the springs are. Higher values mean stronger springs. The default is 0.05. Declaration public decimal? SpringConstant { get; set; } Property Value Type Description System.Nullable < System.Decimal > | Improve this Doc View Source SpringLength The edges are modelled as springs. This springLength here is the rest length of the spring. The default is 200. Declaration public int? SpringLength { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/VisNetwork.Blazor.Models.StabilizationOption.html": {
    "href": "api/VisNetwork.Blazor.Models.StabilizationOption.html",
    "title": "Class StabilizationOption | VisNetwork.Blazor",
    "keywords": "Class StabilizationOption Inheritance System.Object StabilizationOption Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class StabilizationOption : object Properties | Improve this Doc View Source Enabled Toggle the stabilization. This is an optional property. If null, it is automatically set to true when any of the properties of this object are defined. The default is true. Declaration public bool? Enabled { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Fit Toggle whether or not you want the view to zoom to fit all nodes when the stabilization is finished. The default is true. Declaration public bool? Fit { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Iterations The physics module tries to stabilize the network on load up til a maximum number of iterations defined here. If the network stabilized with less, you are finished before the maximum number. The default is 1000. Declaration public int? Iterations { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source OnlyDynamicEdges If you have predefined the position of all nodes and only want to stabilize the dynamic smooth edges, set this to true. It freezes all nodes except the invisible dynamic smooth curve support nodes. If you want the visible nodes to move and stabilize, do not use this. The default is false. Declaration public bool? OnlyDynamicEdges { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source UpdateInterval When stabilizing, the DOM can freeze. You can chop the stabilization up into pieces to show a loading bar for instance. The interval determines after how many iterations the stabilizationProgress event is triggered. The default is 50. Declaration public int? UpdateInterval { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/VisNetwork.Blazor.Models.WindOption.html": {
    "href": "api/VisNetwork.Blazor.Models.WindOption.html",
    "title": "Class WindOption | VisNetwork.Blazor",
    "keywords": "Class WindOption Inheritance System.Object WindOption Namespace : VisNetwork.Blazor.Models Assembly : VisNetwork.Blazor.dll Syntax public class WindOption : object Properties | Improve this Doc View Source X The amount of force to be applied pushing non-fixed nodes to the right (positive value) or to the left (negative value). The default is 0. Declaration public int? X { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Y The amount of force to be applied pushing non-fixed nodes downwards (positive value) or upwards (negative value). The default is 0. Declaration public int? Y { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/VisNetwork.Blazor.Network.html": {
    "href": "api/VisNetwork.Blazor.Network.html",
    "title": "Class Network | VisNetwork.Blazor",
    "keywords": "Class Network Inheritance System.Object Network Namespace : VisNetwork.Blazor Assembly : VisNetwork.Blazor.dll Syntax public class Network : IAsyncDisposable Constructors | Improve this Doc View Source Network() Declaration public Network() Properties | Improve this Doc View Source Data The network data. Declaration public NetworkData Data { get; set; } Property Value Type Description NetworkData | Improve this Doc View Source ExtraAttributes Declaration public Dictionary<string, object> ExtraAttributes { get; set; } Property Value Type Description Dictionary < System.String , System.Object > | Improve this Doc View Source Id Declaration public string Id { get; set; } Property Value Type Description System.String | Improve this Doc View Source OnAfterDrawing Declaration public EventCallback<DrawingEvent> OnAfterDrawing { get; set; } Property Value Type Description EventCallback < DrawingEvent > | Improve this Doc View Source OnBeforeDrawing Declaration public EventCallback<DrawingEvent> OnBeforeDrawing { get; set; } Property Value Type Description EventCallback < DrawingEvent > | Improve this Doc View Source OnClick Fired when the user clicks the mouse or taps on a touchscreen device. Declaration public EventCallback<ClickEvent> OnClick { get; set; } Property Value Type Description EventCallback < ClickEvent > | Improve this Doc View Source OnContext Fired when the user click on the canvas with the right mouse button. The right mouse button does not select by default. You can use the method getNodeAt to select the node if you want. Declaration public EventCallback<ClickEvent> OnContext { get; set; } Property Value Type Description EventCallback < ClickEvent > | Improve this Doc View Source OnDeselectEdge Fired when an edge (or edges) has (or have) been deselected by the user. The previous selection is the list of nodes and edges that were selected before the last user event. Declaration public EventCallback<DeselectClickEvent> OnDeselectEdge { get; set; } Property Value Type Description EventCallback < DeselectClickEvent > | Improve this Doc View Source OnDeselectNode Fired when a node (or nodes) has (or have) been deselected by the user. The previous selection is the list of nodes and edges that were selected before the last user event. Declaration public EventCallback<DeselectClickEvent> OnDeselectNode { get; set; } Property Value Type Description EventCallback < DeselectClickEvent > | Improve this Doc View Source OnDoubleClick Fired when the user double clicks the mouse or double taps on a touchscreen device. Since a double click is in fact 2 clicks, 2 click events are fired, followed by a double click event. If you do not want to use the click events if a double click event is fired, just check the time between click events before processing them. Declaration public EventCallback<ClickEvent> OnDoubleClick { get; set; } Property Value Type Description EventCallback < ClickEvent > | Improve this Doc View Source OnHidePopup Declaration public EventCallback<string> OnHidePopup { get; set; } Property Value Type Description EventCallback < System.String > | Improve this Doc View Source OnHold Fired when the user clicks and holds the mouse or taps and holds on a touchscreen device. A click event is also fired in this case. Declaration public EventCallback<ClickEvent> OnHold { get; set; } Property Value Type Description EventCallback < ClickEvent > | Improve this Doc View Source OnRelease Fired after drawing on the canvas has been completed. Can be used to draw on top of the network. Declaration public EventCallback<ClickEvent> OnRelease { get; set; } Property Value Type Description EventCallback < ClickEvent > | Improve this Doc View Source OnSelect Fired when the selection has changed by user action. This means a node or edge has been selected, added to the selection or deselected. All select events are only triggered on click and hold. Declaration public EventCallback<ClickEvent> OnSelect { get; set; } Property Value Type Description EventCallback < ClickEvent > | Improve this Doc View Source OnSelectEdge Fired when an edge has been selected by the user. Declaration public EventCallback<ClickEvent> OnSelectEdge { get; set; } Property Value Type Description EventCallback < ClickEvent > | Improve this Doc View Source OnSelectNode Fired when a node has been selected by the user. Declaration public EventCallback<ClickEvent> OnSelectNode { get; set; } Property Value Type Description EventCallback < ClickEvent > | Improve this Doc View Source OnShowPopup Declaration public EventCallback<string> OnShowPopup { get; set; } Property Value Type Description EventCallback < System.String > | Improve this Doc View Source Options Sets the options action to create the NetworkOptions . Declaration public Func<Network, NetworkOptions> Options { get; set; } Property Value Type Description Func < Network , NetworkOptions > | Improve this Doc View Source SetupCompletedCallback This event is fired when the network has been setup through interop and the JavaScript network object is available. Declaration public EventCallback SetupCompletedCallback { get; set; } Property Value Type Description EventCallback Methods | Improve this Doc View Source ClusterOutliers() Declaration public Task ClusterOutliers() Returns Type Description Task | Improve this Doc View Source EventCallback(String, String) Declaration public Task EventCallback(string eventName, string eventJson) Parameters Type Name Description System.String eventName System.String eventJson Returns Type Description Task | Improve this Doc View Source GetSelectedEdges() Declaration public Task<string[]> GetSelectedEdges() Returns Type Description Task < System.String []> | Improve this Doc View Source GetSelectedNodes() Declaration public Task<string[]> GetSelectedNodes() Returns Type Description Task < System.String []> | Improve this Doc View Source GetSelection() Declaration public Task<NodeEdgeComposite> GetSelection() Returns Type Description Task < NodeEdgeComposite > | Improve this Doc View Source OnAfterRenderAsync(Boolean) Declaration protected override Task OnAfterRenderAsync(bool firstRender) Parameters Type Name Description System.Boolean firstRender Returns Type Description Task | Improve this Doc View Source OnParametersSetAsync() Declaration protected override Task OnParametersSetAsync() Returns Type Description Task | Improve this Doc View Source ParseDOTNetwork(String) Declaration public Task ParseDOTNetwork(string dotString) Parameters Type Name Description System.String dotString Returns Type Description Task | Improve this Doc View Source Redraw() Declaration public Task Redraw() Returns Type Description Task | Improve this Doc View Source SelectEdges(String[]) Declaration public Task SelectEdges(string[] nodeIds) Parameters Type Name Description System.String [] nodeIds Returns Type Description Task | Improve this Doc View Source SelectNodes(String[]) Declaration public Task SelectNodes(string[] nodeIds) Parameters Type Name Description System.String [] nodeIds Returns Type Description Task | Improve this Doc View Source SetData(NetworkData) Declaration public Task SetData(NetworkData data) Parameters Type Name Description NetworkData data Returns Type Description Task | Improve this Doc View Source SetOptions(NetworkOptions) Declaration public Task SetOptions(NetworkOptions options) Parameters Type Name Description NetworkOptions options Returns Type Description Task | Improve this Doc View Source SetSelection(NodeEdgeComposite) Declaration public Task<NodeEdgeComposite> SetSelection(NodeEdgeComposite composite) Parameters Type Name Description NodeEdgeComposite composite Returns Type Description Task < NodeEdgeComposite > | Improve this Doc View Source SetSize(Int32, Int32) Declaration public Task SetSize(int width, int height) Parameters Type Name Description System.Int32 width System.Int32 height Returns Type Description Task | Improve this Doc View Source UnselectAll() Declaration public Task<NodeEdgeComposite> UnselectAll() Returns Type Description Task < NodeEdgeComposite >"
  },
  "api/VisNetwork.Blazor.VisNetworkConfiguration.html": {
    "href": "api/VisNetwork.Blazor.VisNetworkConfiguration.html",
    "title": "Class VisNetworkConfiguration | VisNetwork.Blazor",
    "keywords": "Class VisNetworkConfiguration Inheritance System.Object VisNetworkConfiguration Namespace : VisNetwork.Blazor Assembly : VisNetwork.Blazor.dll Syntax public static class VisNetworkConfiguration : object Methods | Improve this Doc View Source AddVisNetwork(IServiceCollection) Declaration public static IServiceCollection AddVisNetwork(this IServiceCollection services) Parameters Type Name Description IServiceCollection services Returns Type Description IServiceCollection"
  },
  "articles/gettingstarted.html": {
    "href": "articles/gettingstarted.html",
    "title": "Getting started: | VisNetwork.Blazor",
    "keywords": "Getting started: 1. Install from NuGet: Install the NuGet package: VisNetwork.Blazor . Install using the Package Manager in your IDE or using the command line: dotnet add package VisNetwork.Blazor 2. Register library: Add the following to the relevant sections of Program.cs . using VisNetwork.Blazor; builder.Services.AddVisNetwork(); Add the following using directives to your root _Imports.razor file, or any other .razor file where you want to use vis-network. @using VisNetwork.Blazor 3. Basic usage: Add a Network component in your .razor file and configure it as you need. See Sample-app for example usage. <Network Id=\"my-id\" Data=\"@data\" /> 4. Browse the API Reference 5. Explore the sample on GitHub: Sample"
  },
  "index.html": {
    "href": "index.html",
    "title": "VisNetwork.Blazor | VisNetwork.Blazor",
    "keywords": "VisNetwork.Blazor Blazor component for vis.js/ vis-network . Getting started: Read the Getting Started notes."
  }
}