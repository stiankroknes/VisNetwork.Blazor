<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>net9.0</TargetFramework>
		<OutputType>Exe</OutputType>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<IsPackable>false</IsPackable>
		<PreserveCompilationContext>true</PreserveCompilationContext>
		<TestingPlatformDotnetTestSupport>true</TestingPlatformDotnetTestSupport>
		<UseMicrosoftTestingPlatformRunner>true</UseMicrosoftTestingPlatformRunner>
		<TestingPlatformCaptureOutput>false</TestingPlatformCaptureOutput>
	</PropertyGroup>

	<PropertyGroup>
		<RunSettingsFilePath>$(MSBuildProjectDirectory)\.runsettings</RunSettingsFilePath>
	</PropertyGroup>

	<PropertyGroup>
		<!--
      The functional tests act as the host application for all test websites. Since the CLI copies all reference
      assembly dependencies in websites to their corresponding bin/{config}/refs folder we need to re-calculate
      reference assemblies for this project so there's a corresponding refs folder in our output. Without it
      our websites deps files will fail to find their assembly references.
    -->
		<PreserveCompilationContext>true</PreserveCompilationContext>
		<NeutralLanguage>en-US</NeutralLanguage>
	</PropertyGroup>

	<Target Name="CopyAditionalFiles" AfterTargets="Build" Condition="'$(TargetFramework)'!=''">
		<ItemGroup>
			<DepsFilePaths Include="$([System.IO.Path]::ChangeExtension('%(_ResolvedProjectReferencePaths.FullPath)', '.deps.json'))" />
		</ItemGroup>

		<Copy SourceFiles="%(DepsFilePaths.FullPath)" DestinationFolder="$(OutputPath)" Condition="Exists('%(DepsFilePaths.FullPath)')" />
	</Target>

	<!--<Target Name="CopyDepsJsonFiles" AfterTargets="Publish">
		<ItemGroup>
			<DepsJsonFiles Include="$(TargetDir)*.deps.json" />
		</ItemGroup>
		<Copy SourceFiles="@(DepsJsonFiles)" DestinationFolder="$(PublishDir)" />
	</Target>-->

	<ItemGroup>
		<PackageReference Include="SixLabors.ImageSharp" Version="3.1.11" />
		<PackageReference Include="FluentAssertions" Version="8.7.1" />
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.Server" Version="9.0.9" />
		<PackageReference Include="Microsoft.AspNetCore.Mvc.Testing" Version="9.0.9" />
		<PackageReference Include="Microsoft.Playwright" Version="1.55.0" />
		<PackageReference Include="Microsoft.Playwright.TestAdapter" Version="1.55.0" />
		<PackageReference Include="Serilog" Version="4.3.0" />
		<PackageReference Include="Serilog.Extensions.Logging" Version="9.0.2" />
		<PackageReference Include="xunit.v3" Version="3.1.0" />
		<PackageReference Include="xunit.analyzers" Version="1.24.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="xunit.runner.visualstudio" Version="3.1.5">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>
	</ItemGroup>

	<ItemGroup>
		<None Update="xunit.runner.json">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\..\sample\VisNetwork.Blazor.Server\VisNetwork.Blazor.Server.csproj" />
		<ProjectReference Include="..\..\sample\VisNetwork.Blazor.Wasm\VisNetwork.Blazor.Wasm.csproj" />
	</ItemGroup>

</Project>
